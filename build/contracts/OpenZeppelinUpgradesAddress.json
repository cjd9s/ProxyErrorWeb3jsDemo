{
  "contractName": "OpenZeppelinUpgradesAddress",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility library of inline functions on addresses Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/cjd9s/OneDrive/Documents/Ethereum/ProxyErrorWeb3jsDemo/contracts/utils/Address.sol\":\"OpenZeppelinUpgradesAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/cjd9s/OneDrive/Documents/Ethereum/ProxyErrorWeb3jsDemo/contracts/utils/Address.sol\":{\"keccak256\":\"0x7b17609035d8aed2e7f418583e01ec12f9a67d2e5f4edf388ebf151cc6b997c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7823690e2f25d66bb9ae12009a5083f6de152265c01d5d1854a7e7f96b5bf9ba\",\"dweb:/ipfs/QmWt7DBnc7SEkqRUJVEa5mAb4azffbaHdBsTL2fYfAuTjR\"]}},\"version\":1}",
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204743429d75ac50e25a06e6f65e870ac8b772392979362ee9b1466dc0c47ead4264736f6c63430007000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204743429d75ac50e25a06e6f65e870ac8b772392979362ee9b1466dc0c47ead4264736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "569:1016:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "569:1016:8:-:0;;;;;;;;",
  "source": "/* SPDX-License-Identifier: UNLICENSED */\n\npragma solidity ^0.7.0;\n\n/**\n * Utility library of inline functions on addresses\n *\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\n */\nlibrary OpenZeppelinUpgradesAddress {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}",
  "sourcePath": "C:\\Users\\cjd9s\\OneDrive\\Documents\\Ethereum\\ProxyErrorWeb3jsDemo\\contracts\\utils\\Address.sol",
  "ast": {
    "absolutePath": "/C/Users/cjd9s/OneDrive/Documents/Ethereum/ProxyErrorWeb3jsDemo/contracts/utils/Address.sol",
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        573
      ]
    },
    "id": 574,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 554,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "43:23:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 555,
          "nodeType": "StructuredDocumentation",
          "src": "68:500:8",
          "text": " Utility library of inline functions on addresses\n Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
        },
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "1033:550:8",
              "statements": [
                {
                  "assignments": [
                    564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 564,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 571,
                      "src": "1043:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 563,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1043:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1043:12:8"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1520:32:8",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1522:28:8",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "1542:7:8"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1530:11:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:20:8"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1522:4:8"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 558,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1542:7:8",
                      "valueSize": 1
                    },
                    {
                      "declaration": 564,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1522:4:8",
                      "valueSize": 1
                    }
                  ],
                  "id": 566,
                  "nodeType": "InlineAssembly",
                  "src": "1511:41:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "1568:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1575:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1568:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 562,
                  "id": 570,
                  "nodeType": "Return",
                  "src": "1561:15:8"
                }
              ]
            },
            "documentation": {
              "id": 556,
              "nodeType": "StructuredDocumentation",
              "src": "611:351:8",
              "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n @param account address of the account to check\n @return whether the target address is a contract"
            },
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 572,
                  "src": "987:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "986:17:8"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 572,
                  "src": "1027:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1026:6:8"
            },
            "scope": 573,
            "src": "967:616:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 574,
        "src": "569:1016:8"
      }
    ],
    "src": "43:1542:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/cjd9s/OneDrive/Documents/Ethereum/ProxyErrorWeb3jsDemo/contracts/utils/Address.sol",
      "exportedSymbols": {
        "OpenZeppelinUpgradesAddress": [
          573
        ]
      },
      "license": "UNLICENSED"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 554,
        "name": "PragmaDirective",
        "src": "43:23:8"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            573
          ],
          "name": "OpenZeppelinUpgradesAddress",
          "scope": 574
        },
        "children": [
          {
            "attributes": {
              "text": " Utility library of inline functions on addresses\n Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
            },
            "id": 555,
            "name": "StructuredDocumentation",
            "src": "68:500:8"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isContract",
              "overrides": null,
              "scope": 573,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n @param account address of the account to check\n @return whether the target address is a contract"
                },
                "id": 556,
                "name": "StructuredDocumentation",
                "src": "611:351:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "overrides": null,
                      "scope": 572,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 557,
                        "name": "ElementaryTypeName",
                        "src": "987:7:8"
                      }
                    ],
                    "id": 558,
                    "name": "VariableDeclaration",
                    "src": "987:15:8"
                  }
                ],
                "id": 559,
                "name": "ParameterList",
                "src": "986:17:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 572,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 560,
                        "name": "ElementaryTypeName",
                        "src": "1027:4:8"
                      }
                    ],
                    "id": 561,
                    "name": "VariableDeclaration",
                    "src": "1027:4:8"
                  }
                ],
                "id": 562,
                "name": "ParameterList",
                "src": "1026:6:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        564
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "size",
                          "overrides": null,
                          "scope": 571,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 563,
                            "name": "ElementaryTypeName",
                            "src": "1043:7:8"
                          }
                        ],
                        "id": 564,
                        "name": "VariableDeclaration",
                        "src": "1043:12:8"
                      }
                    ],
                    "id": 565,
                    "name": "VariableDeclarationStatement",
                    "src": "1043:12:8"
                  },
                  {
                    "attributes": {
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 558,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "1542:7:8",
                          "valueSize": 1
                        },
                        {
                          "declaration": 564,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "1522:4:8",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{ size := extcodesize(account) }"
                    },
                    "children": [],
                    "id": 566,
                    "name": "InlineAssembly",
                    "src": "1511:41:8"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 562
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 564,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 567,
                            "name": "Identifier",
                            "src": "1568:4:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 568,
                            "name": "Literal",
                            "src": "1575:1:8"
                          }
                        ],
                        "id": 569,
                        "name": "BinaryOperation",
                        "src": "1568:8:8"
                      }
                    ],
                    "id": 570,
                    "name": "Return",
                    "src": "1561:15:8"
                  }
                ],
                "id": 571,
                "name": "Block",
                "src": "1033:550:8"
              }
            ],
            "id": 572,
            "name": "FunctionDefinition",
            "src": "967:616:8"
          }
        ],
        "id": 573,
        "name": "ContractDefinition",
        "src": "569:1016:8"
      }
    ],
    "id": 574,
    "name": "SourceUnit",
    "src": "43:1542:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-12T13:49:05.494Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Utility library of inline functions on addresses Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.",
    "version": 1
  }
}